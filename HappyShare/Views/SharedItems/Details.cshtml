@model HappyShare.Models.SharedItem

@{
    ViewData["Title"] = "Details";
}

<style>
    .detail-img {
        object-fit: cover;
        width: auto;
        height: 340px;
        min-height: 340px;
        max-width: 340px;
    }

    .detail-map {
        object-fit: cover;
        width: auto;
        height: 280px;
    }
</style>

<h2>Details</h2>


<div>
    <div class="row clearfix">
        <div class="col-md-3 column">
            <img class="detail-img" src="@Href("~" + Model.PictureLink)" alt="productpic">
        </div>

        <div class="col-md-4 column">
            <dl class="dl-horizontal" style="align-items:flex-start">
                <dt>
                    Name:
                </dt>
                <dd id="detail-item-name">
                    <span class="stuff-name">@Html.DisplayFor(model => model.Name)</span>
                </dd>
                <br />
                <dt>
                    Type:
                </dt>
                <dd>
                    <span class="stuff-type">@Html.DisplayFor(model => model.Type)</span>
                </dd>
                <br />
                <dt>
                    Category:
                </dt>
                <dd>
                    <span class="stuff-category"> @Html.DisplayFor(model => model.Category.Name)</span>
                </dd>
                <br />
                <dt>
                    Description:
                </dt>
                <dd>
                    <span class="stuff-description">@Html.DisplayFor(model => model.Description)</span>
                </dd>
            </dl>
            <!-- for map location -->
            <input id="latlng-lat" hidden value="@Model.Lat"/>
            <input id="latlng-lng" hidden value="@Model.Lng"/>
        </div>

        <div class="col-md-5">
            <div id="map" class="detail-map"></div>
            <br />
            <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.Address)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Address)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.ContactorPhone)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.ContactorPhone)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.ContactorEmail)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.ContactorEmail)
                </dd>
            </dl>
        </div>
        <br />
        <button type="button" class="btn btn-primary" onclick="location.href='@Url.Action("AddToCart", "ShoppingCart", new { id = Model.ID })'"><span class="glyphicon glyphicon-star" />Favorites</button>
        <div>
            <a asp-action="Index">Back to List</a>
        </div>
    </div>

    <hr />

</div>


<script>

    function initMap() {
        var lat = document.getElementById('latlng-lat').value;
        var lng = document.getElementById('latlng-lng').value;

        console.log( lat, lng);

        var myLatLng = { lat: parseFloat(lat), lng: parseFloat(lng) };
       // var myLatLng = { lat: -36.879866, lng: 174.708396 };

        console.log(myLatLng);

        // for showing stuff.
        var map = new google.maps.Map(document.getElementById('map'), {
            zoom: 11,
            center: myLatLng
        });

        // set marker, showing stuff position in map
        var n = document.getElementById('detail-item-name');
        var marker = new google.maps.Marker({
            position: myLatLng,
            map: map,
            title: n.value
        });

        // get location from clieck event: for set postion when sharing stuff.
        map.addListener('click', function (e) {
            map.setZoom(8);
            map.setCenter(e.latLng);
        });
    }
</script>
<script async defer
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCnChPKz4KMrT60Mo10p13CMjP2MZ8Nmo8&callback=initMap">
</script>